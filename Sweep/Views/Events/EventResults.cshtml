@model GolfSweep.Data.Event
@{
    ViewData["Title"] = "EventResults";
    Layout = "~/Views/Shared/_Layout.cshtml";
}




<h1>Event OOM</h1>

<div class="row">
    <table class="table">
        <thead>
            
            <tr>
                <th>Player</th>
                <th>Hcap</th>
                <th>Points</th>
                <th>In</th>
                <th>Out</th>
                <th>Last 6</th>
                <th>Last 3</th>
                <th>OOM</th>
            </tr>

        </thead>
        <tbody>
            @foreach (var entry in Model.OOMPoints.OrderByDescending(e => e.Card.TotalPoints)
               .ThenByDescending(e => e.Card.InPoints)
               .ThenByDescending(e => e.Card.LastSixPoints)
               .ThenByDescending(e => e.Card.LastThreePoints))
            {
                <tr>
                    <td>
                        @entry.Card.Player.FullName
                    </td>
                    <th>
                        @entry.Card.Player.CurrentHandicap
                    </th>
                    <th>
                        @entry.Card.TotalPoints
                    </th>
                    <th>
                        @entry.Card.InPoints
                    </th>
                    <th>
                        @entry.Card.OutPoints
                    </th>
                    <th>
                        @entry.Card.LastSixPoints
                    </th>
                    <th>
                        @entry.Card.LastThreePoints
                    </th>
                    <th>
                        @entry.Points
                    </th>
                </tr>
            }
        </tbody>

    </table>


</div>


<div class="row">
    <h1>Updated Handicaps</h1>
    <table class="table">
        <thead>
            <tr>
                <th>Player</th>
                <th>Playing</th>
                <th>Exact</th>
            </tr>

        </thead>

        <tbody>
            @foreach (var entry in Model.Entries.OrderBy(e => e.ScoreCard.Player.CurrentExactHandicap))
            {
                <tr>
                    <td>
                        @entry.ScoreCard.Player.FullName
                    </td>
                    <td>
                        @entry.ScoreCard.Player.CurrentHandicap
                    </td>
                    <th>
                        @entry.ScoreCard.Player.CurrentExactHandicap
                    </th>
                </tr>
            }
            </tbody>

    </table>
</div>





<div class="row">
    <h1>Score Cards</h1>

    <table class="table">
        <thead>
            <tr>
                <th>Player</th>
                <th>Score</th>
                <th>
                    1
                </th>
                <th>
                    2
                </th>
                <th>
                    3
                </th>
                <th>
                    4
                </th>
                <th>
                    5
                </th>
                <th>
                    6
                </th>
                <th>
                    7
                </th>
                <th>
                    8
                </th>
                <th>
                    9
                </th>
                <th>
                    10
                </th>
                <th>
                    11
                </th>
                <th>
                    12
                </th>
                <th>
                    13
                </th>
                <th>
                    14
                </th>
                <th>
                    15
                </th>
                <th>
                    16
                </th>
                <th>
                    17
                </th>
                <th>
                    18
                </th>
                <th>
                    Total
                </th>
                <th>
                    Out
                </th>
                <th>
                    In
                </th>
                <th>
                    6
                </th>
                <th>
                    3
                </th>


            </tr>
        </thead>
        <tbody>

            @foreach (var entry in Model.Entries.OrderByDescending(e => e.ScoreCard.TotalPoints)
             .ThenByDescending(e => e.ScoreCard.InPoints)
             .ThenByDescending(e => e.ScoreCard.LastSixPoints)
             .ThenByDescending(e => e.ScoreCard.LastThreePoints))
            {
                <tr>
                    <td>
                        @entry.ScoreCard.Player.FullName
                    </td>
                    <td>
                        Gross

                    </td>
                    @if (entry.ScoreCard.Scores.Count() > 0)
                    {
                        @foreach (var score in entry.ScoreCard.Scores.OrderBy(e => e.HoleNumber))
                        {
                            <td>
                                @if (score.Gross == Model.Course.Holes.Where(h => h.Number == score.HoleNumber).Select(h => h.Par).FirstOrDefault())
                                {
                                    <p class="badge badge-primary">@score.Gross</p>
                                }
                                @if (score.Gross < Model.Course.Holes.Where(h => h.Number == score.HoleNumber).Select(h => h.Par).FirstOrDefault())
                                {
                                    <p class="badge badge-success">@score.Gross</p>
                                }
                                @if (score.Gross > Model.Course.Holes.Where(h => h.Number == score.HoleNumber).Select(h => h.Par).FirstOrDefault())
                                {
                                    <p class="badge badge-danger">@score.Gross</p>
                                }



                            </td>
                        }
                        <td>
                            @entry.ScoreCard.TotalGross
                        </td>
                        <td>
                            @entry.ScoreCard.OutGross
                        </td>
                        <td>
                            @entry.ScoreCard.InGross
                        </td>
                        <td>
                            @entry.ScoreCard.LastSixGross
                        </td>
                        <td>
                            @entry.ScoreCard.LastThreeGross
                        </td>
                    }
                    else
                    {
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>

                    }

                    <td>
                        <a asp-action="Edit" asp-route-id="@entry.Id" asp-controller="Entries">Edit</a> |
                        <a asp-action="Details" asp-route-id="@entry.Id" asp-controller="Entries">Details</a> |
                        <a asp-action="Delete" asp-route-id="@entry.Id" asp-controller="Entries">Delete</a>
                    </td>
                </tr>
                <tr class="table-borderless">
                    <td></td>
                    <td>
                        Nett
                    </td>
                    @if (entry.ScoreCard.Scores.Count() > 0)
                    {
                        @foreach (var score in entry.ScoreCard.Scores.OrderBy(e => e.HoleNumber))
                        {
                            <td>
                                @if (score.Nett == Model.Course.Holes.Where(h => h.Number == score.HoleNumber).Select(h => h.Par).FirstOrDefault())
                                {
                                    <p class="badge badge-primary">@score.Nett</p>
                                }
                                @if (score.Nett < Model.Course.Holes.Where(h => h.Number == score.HoleNumber).Select(h => h.Par).FirstOrDefault())
                                {
                                    <p class="badge badge-success">@score.Nett</p>
                                }
                                @if (score.Nett > Model.Course.Holes.Where(h => h.Number == score.HoleNumber).Select(h => h.Par).FirstOrDefault())
                                {
                                    <p class="badge badge-danger">@score.Nett</p>
                                }

                            </td>
                        }
                        <td>
                            @entry.ScoreCard.TotalNett
                        </td>
                        <td>
                            @entry.ScoreCard.OutNett
                        </td>
                        <td>
                            @entry.ScoreCard.InNett
                        </td>
                        <td>
                            @entry.ScoreCard.LastSixNett
                        </td>
                        <td>
                            @entry.ScoreCard.LastThreeNett
                        </td>

                    }
                    else
                    {
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>

                    }
                </tr>

                <tr class="table-borderless">
                    <td></td>
                    <td>
                        Points
                    </td>
                    @if (entry.ScoreCard.Scores.Count() > 0)
                    {
                        @foreach (var score in entry.ScoreCard.Scores.OrderBy(e => e.HoleNumber))
                        {
                            <td>
                                @if (score.Points == 2)
                                {
                                    <p class="badge badge-primary">@score.Points</p>
                                }
                                @if (score.Points > 2)
                                {
                                    <p class="badge badge-success">@score.Points</p>
                                }
                                @if (score.Points < 2)
                                {
                                    <p class="badge badge-danger">@score.Points</p>
                                }

                            </td>
                            @*<td>@score.Points</td>*@
                        }
                        <td>
                            <p class="badge badge-success">@entry.ScoreCard.TotalPoints</p>
                        </td>
                        <td>
                            @entry.ScoreCard.OutPoints
                        </td>
                        <td>
                            @entry.ScoreCard.InPoints
                        </td>
                        <td>
                            @entry.ScoreCard.LastSixPoints
                        </td>
                        <td>
                            @entry.ScoreCard.LastThreePoints
                        </td>

                    }
                    else
                    {
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>

                    }
                </tr>




            }
        </tbody>

    </table>

</div>

<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a> |
    <a href="~/Events/@Model.Id/Entries/Create">Add Entry</a>
</div>
